/*
 * Language.java
 *
 * Created on 2018-05-30, 7:13
 */
package com.marcnuri.demo.springmockmvc.language;

import java.io.Serializable;
import java.util.Objects;

/**
 * Created by Marc Nuri <marc@marcnuri.com> on 2018-05-30.
 */
public class Language implements Serializable {

  private static final long serialVersionUID = 6000115618481392347L;

//**************************************************************************************************
//  Fields
//**************************************************************************************************
  private final String name;
  private final String designer;

//**************************************************************************************************
//  Constructors
//**************************************************************************************************
  public Language(String name, String designer) {
    this.name = name;
    this.designer = designer;
  }

//**************************************************************************************************
//  Abstract Methods
//**************************************************************************************************

//**************************************************************************************************
//  Overridden Methods
//**************************************************************************************************

//**************************************************************************************************
//  Other Methods
//**************************************************************************************************

//**************************************************************************************************
//  Getter/Setter Methods
//**************************************************************************************************
  public String getName() {
    return name;
  }

  public String getDesigner() {
    return designer;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Language language = (Language) o;
    return Objects.equals(name, language.name) &&
        Objects.equals(designer, language.designer);
  }

  @Override
  public int hashCode() {

    return Objects.hash(name, designer);
  }

  //**************************************************************************************************
//  Static Methods
//**************************************************************************************************

//**************************************************************************************************
//  Inner Classes
//**************************************************************************************************

}
